os: unstable

environment:
  matrix:
    - language: cpp
      PYTHON3: "C:\\Python34"
      PYTHON3_VERSION: "3.4.3"
      PYTHON3_ARCH: "64"

      # PYTHON2.7 REQUIRED FOR NODE-GYP & ELECTRON
      PYTHON2: "C:\\Python27"
      PYTHON2_VERSION: "2.7.9"
      PYTHON2_ARCH: "64"

  PIP3: C:\\Python34\Scripts\pip
  PIP2: C:\\Python27\Scripts\pip

  npm_config_arch: x64

platform: x64

configuration: Release

init:
  - cmd: node --version
  - cmd: npm --version

  - "ECHO Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  - cmd: ECHO Processor architecture - %PROCESSOR_ARCHITECTURE%
  - cmd: wmic OS get OSArchitecture
  - cmd: npm config set msvs_version 2015 --global

  - cmd: ECHO %PYTHON3% %PYTHON3_VERSION% %PYTHON3_ARCH%
  - cmd: "%PYTHON3%\\python --version"
  - cmd: "%PYTHON3%\\python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - cmd: "%PYTHON3%\\python -m pip install --upgrade pip"

  - cmd: ECHO %PYTHON2% %PYTHON2_VERSION% %PYTHON2_ARCH%
  - cmd: "%PYTHON2%\\python --version"
  - cmd: "%PYTHON2%\\python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - cmd: "%PYTHON2%\\python -m pip install --upgrade pip"

  - ps: Install-Product node 6.0.0 x64
  - cmd: node --version
  - cmd: npm --version
    # CRITICAL FOR NODE-GYP TO WORK
  - cmd: npm -g install npm@latest
  - cmd: npm --version

  # SET THE RELEVANT PYTHON AND PIP LOCATIONS IN THE PATH
  - cmd: set PATH=%PYTHON3%;%PYTHON3%\scripts;%PYTHON2%;%PYTHON2%\scripts;%PATH%
  - cmd: ECHO Path - %PATH%
  - ps: cp C:\Python34\python.exe C:\Python34\python3.4.exe

install:
  # NOTE: OTONE-FRONTEND NOW CLONED INTO C:\\PROJECTS\OTOONE-FRONTEND

  # 1. INSTALL PYTHON DEPENDENCIES
  - cmd: "%PIP3% install -r requirements.txt"

  - cmd: "%PIP2% freeze"
  - cmd: "%PIP3% freeze"

  # ADDITIONAL NPM PREP FOR ELECTRON APP BUILD
  - cmd: npm config list
  - cmd: npm config set python %PYTHON2%\python.exe --global

  - npm install
  - npm install -g mocha@3.1.2
  - npm run release:win
  # - npm run integration

build: off

before_deploy:
  - ps: Get-ChildItem .\releases\*
  - ps: ls .\releases\*
  - ps: Get-ChildItem .\releases\* | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName OTAppWin}


deploy:
  - provider: S3
    access_key_id: $(AWS_ACCESS_KEY)
    secret_access_key: $(AWS_SECRET_KEY)
    bucket: ot-app-builds
    set_public: true
    folder: win
    artifact: OTAppWin
